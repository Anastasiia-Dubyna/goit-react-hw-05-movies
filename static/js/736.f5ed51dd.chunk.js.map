{"version":3,"file":"static/js/736.f5ed51dd.chunk.js","mappings":"iQAEaA,EAAOC,EAAAA,EAAAA,GAAH,kDAIJC,EAAOD,EAAAA,EAAAA,EAAH,yF,SCgDjB,EAhDa,WACX,IAAQE,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAqBA,OAnBAC,EAAAA,EAAAA,YAAU,WAEND,GAAW,IAEXE,EAAAA,EAAAA,IAAYR,GACTS,MAAK,SAAAN,GACJC,EAAUD,EACX,IACAO,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EACb,IACAG,SAAQ,WACPR,GAAW,EACZ,GAIN,GAAE,CAACN,KAGF,2BACGK,IAAW,SAACU,EAAA,EAAD,KAEZ,SAAClB,EAAD,UACGM,EAAOa,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,cAAeC,EAApC,EAAoCA,KAAMC,EAA1C,EAA0CA,UAA1C,OACV,2BACE,gBACEC,MAAM,QACNC,IACEL,EAAY,yCAC0BA,GAD1B,6EAIdM,IAAKL,KAEP,SAACpB,EAAD,UAAOqB,KACP,UAACrB,EAAD,WAAM,cAAYsB,OAXXJ,EADC,QAkBnB,C,mMCnDDQ,EAAAA,EAAAA,SAAAA,QAAyB,gCACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAHc,mCAIdC,SAAU,QACVC,KAAM,EACNC,eAAe,GAGV,IAAMC,EAAa,mCAAG,oGACJL,EAAAA,EAAAA,IAAA,sBADI,cACrBM,EADqB,yBAEpBA,EAASC,KAAKC,SAFM,2CAAH,qDAKbC,EAAoB,mCAAG,WAAMC,GAAN,uFACXV,EAAAA,EAAAA,IAAA,6BAAgCU,IADrB,cAC5BJ,EAD4B,yBAE3BA,EAASC,KAAKC,SAFa,2CAAH,sDAKpBG,EAAiB,mCAAG,WAAMpC,GAAN,uFACRyB,EAAAA,EAAAA,IAAA,gBAAmBzB,IADX,cACzB+B,EADyB,yBAExBA,EAASC,MAFe,2CAAH,sDAKjBxB,EAAW,mCAAG,WAAMR,GAAN,uFACFyB,EAAAA,EAAAA,IAAA,gBAAmBzB,EAAnB,aADE,cACnB+B,EADmB,yBAElBA,EAASC,KAAKK,MAFI,2CAAH,sDAKXC,EAAY,mCAAG,WAAMtC,GAAN,uFACHyB,EAAAA,EAAAA,IAAA,gBAAmBzB,EAAnB,aADG,cACpB+B,EADoB,yBAEnBA,EAASC,KAAKC,SAFK,2CAAH,qD","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","services/TmbdApi.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  list-style-type: none;\n`;\n\nexport const Text = styled.p`\n  font-weight: 600;\n  font-size: 18px;\n  margin-bottom: 10px;\n`;\n","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { fetchActors } from 'services/TmbdApi';\nimport Loader from 'components/Loader/Loader';\nimport { List, Text } from './Cast.styled';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [actors, setActors] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const onActorsOfMovie = () => {\n      setLoading(true);\n\n      fetchActors(movieId)\n        .then(actors => {\n          setActors(actors);\n        })\n        .catch(error => {\n          console.log(error);\n        })\n        .finally(() => {\n          setLoading(false);\n        });\n    };\n\n    onActorsOfMovie();\n  }, [movieId]);\n\n  return (\n    <div>\n      {loading && <Loader />}\n\n      <List>\n        {actors.map(({ id, profile_path, original_name, name, character }) => (\n          <li key={id}>\n            <img\n              width=\"200px\"\n              src={\n                profile_path\n                  ? `https://image.tmdb.org/t/p/w500${profile_path}`\n                  : `https://upload.wikimedia.org/wikipedia/commons/1/14/No_Image_Available.jpg`\n              }\n              alt={original_name}\n            />\n            <Text>{name}</Text>\n            <Text>Character: {character}</Text>\n          </li>\n        ))}\n      </List>\n    </div>\n  );\n};\nexport default Cast;\n","import axios from 'axios';\nconst API_KEY = '39e7da294e936c33fd9232ae467a3749';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n  api_key: API_KEY,\n  language: 'en-US',\n  page: 1,\n  include_adult: false,\n};\n\nexport const fetchTrending = async () => {\n  const response = await axios.get(`trending/movie/day`);\n  return response.data.results;\n};\n\nexport const fetchSearchByKeyword = async keyword => {\n  const response = await axios.get(`search/movie?query=${keyword}`);\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(`movie/${movieId}`);\n  return response.data;\n};\n\nexport const fetchActors = async movieId => {\n  const response = await axios.get(`movie/${movieId}/credits`);\n  return response.data.cast;\n};\n\nexport const fetchReviews = async movieId => {\n  const response = await axios.get(`movie/${movieId}/reviews`);\n  return response.data.results;\n};\n"],"names":["List","styled","Text","movieId","useParams","useState","actors","setActors","loading","setLoading","useEffect","fetchActors","then","catch","error","console","log","finally","Loader","map","id","profile_path","original_name","name","character","width","src","alt","axios","api_key","language","page","include_adult","fetchTrending","response","data","results","fetchSearchByKeyword","keyword","fetchMovieDetails","cast","fetchReviews"],"sourceRoot":""}