{"version":3,"file":"static/js/387.9a12c1e2.chunk.js","mappings":"qPAEaA,E,QAAOC,EAAAA,GAAH,kD,SCkDjB,EA9CgB,WACd,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAqBA,OAnBAC,EAAAA,EAAAA,YAAU,WAEND,GAAW,IAEXE,EAAAA,EAAAA,IAAaR,GACVS,MAAK,SAAAN,GACJC,EAAWD,EACZ,IACAO,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EACb,IACAG,SAAQ,WACPR,GAAW,EACZ,GAIN,GAAE,CAACN,KAGF,gCACGK,IAAW,SAACU,EAAA,EAAD,IACQ,IAAnBZ,EAAQa,SACP,0BACE,SAAClB,EAAD,UACGK,EAAQc,KAAI,SAAAC,GAAM,OACjB,2BACE,0BAAI,WAASA,EAAOC,WACpB,uBAAID,EAAOE,YAFJF,EAAOG,GADC,QASL,IAAnBlB,EAAQa,SACP,yBAAK,+CAIZ,C,mMChDDM,EAAAA,EAAAA,SAAAA,QAAyB,gCACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAHc,mCAIdC,SAAU,QACVC,KAAM,EACNC,eAAe,GAGV,IAAMC,EAAa,mCAAG,oGACJL,EAAAA,EAAAA,IAAA,sBADI,cACrBM,EADqB,yBAEpBA,EAASC,KAAKC,SAFM,2CAAH,qDAKbC,EAAoB,mCAAG,WAAMC,GAAN,uFACXV,EAAAA,EAAAA,IAAA,6BAAgCU,IADrB,cAC5BJ,EAD4B,yBAE3BA,EAASC,KAAKC,SAFa,2CAAH,sDAKpBG,EAAiB,mCAAG,WAAMjC,GAAN,uFACRsB,EAAAA,EAAAA,IAAA,gBAAmBtB,IADX,cACzB4B,EADyB,yBAExBA,EAASC,MAFe,2CAAH,sDAKjBK,EAAW,mCAAG,WAAMlC,GAAN,uFACFsB,EAAAA,EAAAA,IAAA,gBAAmBtB,EAAnB,aADE,cACnB4B,EADmB,yBAElBA,EAASC,KAAKM,MAFI,2CAAH,sDAKX3B,EAAY,mCAAG,WAAMR,GAAN,uFACHsB,EAAAA,EAAAA,IAAA,gBAAmBtB,EAAnB,aADG,cACpB4B,EADoB,yBAEnBA,EAASC,KAAKC,SAFK,2CAAH,qD","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","services/TmbdApi.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  list-style-type: none;\n`;\n","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { fetchReviews } from 'services/TmbdApi';\nimport Loader from 'components/Loader/Loader';\nimport { List } from './Reviews.styled';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchReviewsFilms = () => {\n      setLoading(true);\n\n      fetchReviews(movieId)\n        .then(reviews => {\n          setReviews(reviews);\n        })\n        .catch(error => {\n          console.log(error);\n        })\n        .finally(() => {\n          setLoading(false);\n        });\n    };\n\n    fetchReviewsFilms();\n  }, [movieId]);\n\n  return (\n    <>\n      {loading && <Loader />}\n      {reviews.length !== 0 && (\n        <div>\n          <List>\n            {reviews.map(review => (\n              <li key={review.id}>\n                <h2>Author: {review.author}</h2>\n                <p>{review.content}</p>\n              </li>\n            ))}\n          </List>\n        </div>\n      )}\n      {reviews.length === 0 && (\n        <div>We don't have any reviews for this movie</div>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\nconst API_KEY = '39e7da294e936c33fd9232ae467a3749';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n  api_key: API_KEY,\n  language: 'en-US',\n  page: 1,\n  include_adult: false,\n};\n\nexport const fetchTrending = async () => {\n  const response = await axios.get(`trending/movie/day`);\n  return response.data.results;\n};\n\nexport const fetchSearchByKeyword = async keyword => {\n  const response = await axios.get(`search/movie?query=${keyword}`);\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(`movie/${movieId}`);\n  return response.data;\n};\n\nexport const fetchActors = async movieId => {\n  const response = await axios.get(`movie/${movieId}/credits`);\n  return response.data.cast;\n};\n\nexport const fetchReviews = async movieId => {\n  const response = await axios.get(`movie/${movieId}/reviews`);\n  return response.data.results;\n};\n"],"names":["List","styled","movieId","useParams","useState","reviews","setReviews","loading","setLoading","useEffect","fetchReviews","then","catch","error","console","log","finally","Loader","length","map","review","author","content","id","axios","api_key","language","page","include_adult","fetchTrending","response","data","results","fetchSearchByKeyword","keyword","fetchMovieDetails","fetchActors","cast"],"sourceRoot":""}